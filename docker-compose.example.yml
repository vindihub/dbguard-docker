services:
  wordpress-app:
    image: wordpress:latest
    container_name: wordpress-app
    ports:
      - "8080:80"
    networks:
      - cloudflare-tun # Or whatever
      - wordpress-net # Internal stack network

    environment:
      WORDPRESS_DB_HOST: wordpress-db
      WORDPRESS_DB_USER: wordpress
      WORDPRESS_DB_PASSWORD: mys3cr3tp4ssw0rd!
      WORDPRESS_DB_NAME: wp_s1t3

  wordpress-db:
    image: mysql:5.7
    container_name: wordpress-db
    networks:
      - wordpress-net
    environment:
      MYSQL_DATABASE: wordpress_db
      MYSQL_USER: wordpress
      MYSQL_PASSWORD: mys3cr3tp4ssw0rd!
      MYSQL_ROOT_PASSWORD: r4bb1th0l3

  wordpress-dbguardian:
    image: vindihub/dbguardian:pre
    container_name: wordpress-dbguardian
    volumes:
      - /your/host/path/to/backup/folder:/backups
    networks:
      - wordpress-net # Your app/stack network
      - uptimekuma-net # uptime-kuma internal network
    environment:
      # MySQL configuration
      # - MYSQL_HOST= # MySQL Host
      # - MYSQL_USER= # MySQL User
      # - MYSQL_PASSWORD= # MySQL Password
      # - MYSQL_DATABASE= # MySQL Database Name
      
      # PostgreSQL configuration
      # - POSTGRES_HOST=joplin-db # Postgres Host
      # - POSTGRES_USER= # Postgres User
      # - POSTGRES_PASSWORD= # Postgres Password
      # - POSTGRES_DB= # Postgres Database Name
      
      # MariaDB configuration
      # - MARIADB_HOST= # MariaDB Host
      # - MARIADB_USER= # MariaDB User
      # - MARIADB_PASSWORD= # MariaDB Password
      # - MARIADB_DATABASE= # MariaDB Database Name
      
      - UPTIME_KUMA_PUSH_URL=http://UPTIMEKUMA-URL-OR-IP:3001/api/push/YOUR_TOKEN_HERE # Push URL from uptime-kuma monitor
    command: backup-mysql.sh # Select backup-mysql.sh, backup-postgres.sh, or backup-mariadb.sh
   # command: backup-mariadb.sh
   # command: backup-postgres.sh

volumes:
  mysql_data:

networks:
  uptimekuma-net:
    external: true
  wordpress-net:
    external: false
